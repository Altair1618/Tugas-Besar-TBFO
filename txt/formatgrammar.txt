// START
S -> S S | BODY | FUNCTION

// VAR TO TERMINAL
NAME -> validName
VAR -> KURBKI VAR KURBKA | validName | OBJ_VAR
FUNC_CALL -> validName KURBKI FUNC_INPUT KURBKA
FUNC_INPUT -> EXP | EXP COMMAS FUNC_INPUT
ALL_OPERATOR -> ARIT_OPERATOR | LOGI_OPERATOR | LOGI_COMPARE | B_OPERATOR
EXP -> VALUE | VALUE ALL_OPERATOR EXP | KURBKI EXP KURBKA | NOT EXP | B_NOT EXP

// MATH OPERATOR
ARIT_OPERATOR -> ADD | SUB | MUL | DIV | MOD
ADD -> +
SUB -> -
MUL -> *
DIV -> /
MOD -> %
INCDEC -> PREINC | PREDEC | POSTINC | POSTDEC
PREINC -> + + VAR | + + NUM
PREDEC -> - - VAR | - - NUM
POSTINC -> VAR + + | NUM + +
POSTDEC -> VAR - - | - -

// BODY
BODY -> BODY BODY | IF_OUT | ALL_FOR_OUT | WHILE_OUT | VAR ARIT_ASSIGN EXP SEMICOLON | VAR ARIT_ASSIGN EXP | DECLARATION | THROW | OBJ_METHOD | TCF_OUT | FUNC_CALL

BODY_IN_LOOP -> BODY_IN_LOOP BODY_IN_LOOP | IF_IN_LOOP | ALL_FOR_OUT | WHILE_OUT | VAR ARIT_ASSIGN EXP SEMICOLON | VAR ARIT_ASSIGN EXP | DECLARATION | BREAK | CONTINUE | THROW | OBJ_METHOD | TCF_IN_LOOP | FUNC_CALL

BODY_IN_FUNC -> BODY_IN_FUNC BODY_IN_FUNC | IF_IN_FUNC | ALL_FOR_IN_FUNC | WHILE_IN_FUNC | VAR ARIT_ASSIGN EXP SEMICOLON | VAR ARIT_ASSIGN EXP | DECLARATION | RETURN_FUNC | THROW | OBJ_METHOD | TCF_IN_FUNC | FUNC_CALL

BODY_IN_LOOP_IN_FUNC -> BODY_IN_LOOP_IN_FUNC BODY_IN_LOOP_IN_FUNC | IF_IN_LOOP_IN_FUNC | ALL_FOR_IN_FUNC | WHILE_IN_FUNC | VAR ARIT_ASSIGN EXP SEMICOLON | VAR ARIT_ASSIGN EXP | DECLARATION | BREAK | CONTINUE | RETURN_FUNC | THROW | OBJ_METHOD | TCF_IN_LOOP_IN_FUNC | FUNC_CALL

// BOOLEAN
BOOL -> TRUE | FALSE | NULL
TRUE -> true
FALSE -> false
NULL -> null

// LOGICAL OPERATOR
LOGI_OPERATOR -> AND | OR
LOGI_COMPARE -> EQT | NEQ | SEQ | SNEQ | GT | GTE | LT | LTE
EQT -> = =
NEQ -> ! =
SEQ -> = = =
SNEQ -> ! = =
GT -> >
GTE -> > =
LT -> <
LTE -> < =
AND -> &&
NOT -> !

// ARITHMETIC ASSIGN OPERATOR
ARIT_ASSIGN -> EQ | PLUSEQ | MINUSEQ | TIMESEQ | DIVEQ | MODEQ | POWEQ | LSH_ASSIGN | RSH_ASSIGN | LOG_RSH_ASSIGN
EQ -> =
PLUSEQ -> + =
MINUSEQ -> - =
TIMESEQ -> * =
DIVEQ -> / =
MODEQ -> % =
POWEQ -> * * =
AND_ASSIGN -> & & =
B_AND_ASSIGN -> & =
OR_ASSIGN -> OR =
B_OR_ASSIGN -> B_OR =
B_XOR_ASSIGN -> ^ =
LSH_ASSIGN -> < < =
RSH_ASSIGN -> > > =
LOG_RSH_ASSIGN -> > > > =

// BITWISE OPERATOR
B_OPERATOR -> RSH | LSH | B_AND | B_XOR | B_NOT | B_OR
RSH -> > >
LSH -> < <
B_AND -> &
B_XOR -> ^
B_NOT -> ~
B_OR -> |

// SYMBOLS
SEMICOLON -> ;
COLONS -> :
DOT -> .
COMMAS -> ,

// BRACKETS
KURBKI -> (
KURBKA -> )
KURSKI -> [
KURSKA -> ]
KURAKI -> {
KURAKA -> }

// SYNTAX NAME
OFS -> of
INS -> in
FORS -> for
SWITCHS -> switch
CASE_STR -> case
DEFAULT_STR -> default
BREAKS -> break
BREAK -> BREAK ;
CONTINUES -> continue
CONTINUE -> CONTINUE ;
DELETES -> delete
FUNCTIONS -> function
RETURNS -> return
ELSES -> else
IFS -> if

// DECLARATION
DECLARATIONS -> const | let | var
DECLARATION -> DECLARATIONS VAR EQ EXP SEMICOLON | DECLARATIONS VAR EQ EXP

// DATATYPE NUM
FLOAT -> INT DOT INT
INT -> validNum
NUM -> - INT | - FLOAT | FLOAT | INT | KURBKI NUM KURBKA

// DATATYPE STRING
STRING -> validString

// DATATYPE OBJECT
OBJ_VAR -> validName DOT OBJECT
OBJ_VAR -> validName DOT validName
OBJ_METHOD -> validName DOT OBJ_METHOD
OBJ_METHOD -> validName DOT validName KURBKI FUNC_INPUT KURBKA SEMICOLON | validName DOT validName KURBKI FUNC_INPUT KURBKA

// DATATYPE ARRAY
ARR_VAL -> EXP | EXP COMMAS ARR_VAL
ARRAY -> KURSKI ARR_VAL KURSKA

VALUE -> NUM | STRING | BOOL | VAR | OBJ_VAR | ARRAY | INCDEC | FUNC_CALL | KURBKI VALUE KURBKI

// TERMINAL TO TERMINAL

// FUNCTION
FUNCTION -> FUNC_HEAD KURAKI BODY_IN_FUNC KURAKA | FUNC_HEAD KURAKI KURAKA
FUNC_HEAD -> FUNCTIONS validName KURBKI PARAMETERS KURBKA
PARAMETERS -> PARAMETERS COMMAS PARAMETERS | VAR | VAR EQ EXP
RETURN_FUNC -> RETURNS EXP SEMICOLON | RETURNS EXP

// FOR
ALL_FOR_OUT -> FOR_OUT | FORIN_OUT | FOROF_OUT
ALL_FOR_IN_FUNC -> FOR_IN_FUNC | FORIN_IN_FUNC | FOROF_IN_FUNC

ITERABLES -> STRING | ARRAY | VAR | OBJ_VAR

FORIN_OUT -> FORS KURBKI DECLARATIONS VAR INS ITERABLES KURBKA KURAKI BODY_IN_LOOP KURAKA | FORS KURBKI VAR INS ITERABLES KURBKA KURAKI BODY_IN_FUNC KURAKA

FOROF_OUT -> FORS KURBKI DECLARATIONS VAR OFS ITERABLES KURBKA KURAKI BODY_IN_LOOP KURAKA | FORS KURBKI VAR OFS ITERABLES KURBKA KURAKI BODY_IN_LOOP KURAKA

FORIN_IN_FUNC -> FORS KURBKI DECLARATIONS VAR INS ITERABLES KURBKA KURAKI BODY_IN_LOOP_IN_FUNC KURAKA | FORS KURBKI VAR INS ITERABLES KURBKA KURAKI BODY_IN_LOOP_IN_FUNC KURAKA

FOROF_IN_FUNC -> FORS KURBKI DECLARATIONS VAR OFS ITERABLES KURBKA KURAKI BODY_IN_LOOP_IN_FUNC KURAKA | FORS KURBKI VAR OFS ITERABLES KURBKA KURAKI BODY_IN_LOOP_IN_FUNC KURAKA

FOR_EXP1 -> DECLARATIONS VAR ARIT_ASSIGN EXP | VAR ARIT_ASSIGN EXP | VAR
FOR_EXP23 -> VAR ARIT_ASSIGN EXP | VAR | EXP
FOR_HEAD -> KURBKI FOR_EXP1 SEMICOLON FOR_EXP23 SEMICOLON FOR_EXP23 KURBKA | KURBKI SEMICOLON FOR_EXP23 SEMICOLON FOR_EXP23 KURBKA | KURBKI FOR_EXP1 SEMICOLON SEMICOLON FOR_EXP23 KURBKA | KURBKI FOR_EXP1 SEMICOLON FOR_EXP23 SEMICOLON KURBKA | KURBKI SEMICOLON SEMICOLON FOR_EXP23 KURBKA | KURBKI SEMICOLON FOR_EXP23 SEMICOLON KURBKA | KURBKI FOR_EXP1 SEMICOLON SEMICOLON KURBKA | KURBKI SEMICOLON SEMICOLON KURBKA

FOR_OUT -> FORS FOR_HEAD KURAKI BODY_IN_LOOP KURAKA | FORS FOR_HEAD KURAKI KURAKA

FOR_IN_FUNC -> FORS FOR_HEAD KURAKI BODY_IN_LOOP_IN_FUNC KURAKA | FORS FOR_HEAD KURAKI KURAKA

// SWITCH CASE
SWITCH_FUNC -> SWITCH_HEAD SWITCH_BODY | CONST_FUNC SWITCH_HEAD1 SWITCH_BODY
SWITCH_HEAD -> SWITCHS KURBKI SWITCH_EXP KURBKA
SWITCH_HEAD1 -> SWITCHS KURBKI VAR KURBKA
SWITCH_EXP -> DECLARATIONS VAR EQ VALUE
SWITCH_BODY -> CASES CASES | CASES DEFAULTS | DEFAULTS CASES | CASES
CASES -> CASES CASES | CASE_STR VALUE COLONS BODY_IN_FUNC | CASE_STR VALUE COLONS BODY_IN_FUNC BREAK
DEFAULTS -> DEFAULT_STR COLONS BODY_IN_FUNC | DEFAULT_STR COLONS BODY_IN_FUNC BREAK

// IF ELSE
IF_EXP -> KURBKI EXP KURBKA

IF_OUT -> IFS IF_EXP KURAKI BODY KURAKA | IFS IF_EXP KURAKI KURAKA | IFS IF_EXP KURAKI BODY KURAKA ELSE_OUT | IFS IF_EXP KURAKI KURAKA ELSE_OUT
ELSE_OUT -> ELSES KURAKI BODY KURAKA | ELSES KURAKI KURAKA | ELSES IF_OUT

IF_IN_FUNC -> IFS IF_EXP KURAKI BODY_IN_FUNC KURAKA | IFS IF_EXP KURAKI KURAKA | IFS IF_EXP KURAKI BODY_IN_FUNC KURAKA ELSE_IN_FUNC | IFS IF_EXP KURAKI KURAKA ELSE_IN_FUNC
ELSE_IN_FUNC -> ELSES KURAKI BODY_IN_FUNC KURAKA | ELSES KURAKI KURAKA | ELSES IF_IN_FUNC

IF_IN_LOOP -> IFS IF_EXP KURAKI BODY_IN_LOOP KURAKA | IFS IF_EXP KURAKI KURAKA | IFS IF_EXP KURAKI BODY_IN_LOOP KURAKA ELSE_IN_LOOP | IFS IF_EXP KURAKI KURAKA ELSE_IN_LOOP
ELSE_IN_LOOP -> ELSES KURAKI BODY_IN_LOOP KURAKA | ELSES KURAKI KURAKA | ELSES IF_IN_LOOP

IF_IN_LOOP_IN_FUNC -> IFS IF_EXP KURAKI BODY_IN_LOOP_IN_FUNC KURAKA | IFS IF_EXP KURAKI KURAKA | IFS IF_EXP KURAKI BODY_IN_LOOP_IN_FUNC KURAKA ELSE_IN_LOOP_IN_FUNC | IFS IF_EXP KURAKI KURAKA ELSE_IN_LOOP_IN_FUNC
ELSE_IN_LOOP_IN_FUNC -> ELSES KURAKI BODY_IN_LOOP_IN_FUNC KURAKA | ELSES KURAKI KURAKA | ELSES IF_IN_LOOP_IN_FUNC

// DELETE
DELETE_FUNC -> DELETES OBJ_VAR SEMICOLON | DELETES OBJ_VAR | DELETES validName KURSKI NUM KURSKA SEMICOLON | DELETES validName KURSKI NUM KURSKA

// TRY CATCH
TRYS -> try
FINALLYS -> finally
CATCH -> catch

THROWS -> throw
THROW -> THROWS EXP SEMICOLON | THROWS EXP

TRY_HEAD -> try KURAKI
CATCH_HEAD -> catch KURAKI | catch KURBKI VAR KURBKA KURAKI
FINALLY_HEAD -> finally KURAKI

TCF_OUT -> TRY_HEAD BODY KURAKA CATCH_HEAD BODY KURAKA FINALLY_HEAD BODY KURAKA | TRY_HEAD KURAKA CATCH_HEAD BODY KURAKA FINALLY_HEAD BODY KURAKA | TRY_HEAD BODY KURAKA CATCH_HEAD KURAKA FINALLY_HEAD BODY KURAKA | TRY_HEAD BODY KURAKA CATCH_HEAD BODY KURAKA FINALLY_HEAD KURAKA | TRY_HEAD KURAKA CATCH_HEAD KURAKA FINALLY_HEAD BODY KURAKA | TRY_HEAD KURAKA CATCH_HEAD BODY KURAKA FINALLY_HEAD KURAKA | TRY_HEAD BODY KURAKA CATCH_HEAD KURAKA FINALLY_HEAD KURAKA | TRY_HEAD KURAKA CATCH_HEAD KURAKA FINALLY_HEAD KURAKA | TRY_HEAD BODY KURAKA CATCH_HEAD BODY KURAKA | TRY_HEAD BODY KURAKA CATCH_HEAD KURAKA | TRY_HEAD KURAKA CATCH_HEAD BODY KURAKA | TRY_HEAD KURAKA CATCH_HEAD KURAKA | TRY_HEAD BODY KURAKA FINALLY_HEAD BODY KURAKA | TRY_HEAD BODY KURAKA FINALLY_HEAD KURAKA | TRY_HEAD KURAKA FINALLY_HEAD BODY KURAKA | TRY_HEAD KURAKA FINALLY_HEAD KURAKA

TCF_IN_LOOP -> TRY_HEAD BODY_IN_LOOP KURAKA CATCH_HEAD BODY_IN_LOOP KURAKA FINALLY_HEAD BODY_IN_LOOP KURAKA | TRY_HEAD KURAKA CATCH_HEAD BODY_IN_LOOP KURAKA FINALLY_HEAD BODY_IN_LOOP KURAKA | TRY_HEAD BODY_IN_LOOP KURAKA CATCH_HEAD KURAKA FINALLY_HEAD BODY_IN_LOOP KURAKA | TRY_HEAD BODY_IN_LOOP KURAKA CATCH_HEAD BODY_IN_LOOP KURAKA FINALLY_HEAD KURAKA | TRY_HEAD KURAKA CATCH_HEAD KURAKA FINALLY_HEAD BODY_IN_LOOP KURAKA | TRY_HEAD KURAKA CATCH_HEAD BODY_IN_LOOP KURAKA FINALLY_HEAD KURAKA | TRY_HEAD BODY_IN_LOOP KURAKA CATCH_HEAD KURAKA FINALLY_HEAD KURAKA | TRY_HEAD KURAKA CATCH_HEAD KURAKA FINALLY_HEAD KURAKA | TRY_HEAD BODY_IN_LOOP KURAKA CATCH_HEAD BODY_IN_LOOP KURAKA | TRY_HEAD BODY_IN_LOOP KURAKA CATCH_HEAD KURAKA | TRY_HEAD KURAKA CATCH_HEAD BODY_IN_LOOP KURAKA | TRY_HEAD KURAKA CATCH_HEAD KURAKA | TRY_HEAD BODY_IN_LOOP KURAKA FINALLY_HEAD BODY_IN_LOOP KURAKA | TRY_HEAD BODY_IN_LOOP KURAKA FINALLY_HEAD KURAKA | TRY_HEAD KURAKA FINALLY_HEAD BODY_IN_LOOP KURAKA | TRY_HEAD KURAKA FINALLY_HEAD KURAKA

TCF_IN_FUNC -> TRY_HEAD BODY_IN_FUNC KURAKA CATCH_HEAD BODY_IN_FUNC KURAKA FINALLY_HEAD BODY_IN_FUNC KURAKA | TRY_HEAD KURAKA CATCH_HEAD BODY_IN_FUNC KURAKA FINALLY_HEAD BODY_IN_FUNC KURAKA | TRY_HEAD BODY_IN_FUNC KURAKA CATCH_HEAD KURAKA FINALLY_HEAD BODY_IN_FUNC KURAKA | TRY_HEAD BODY_IN_FUNC KURAKA CATCH_HEAD BODY_IN_FUNC KURAKA FINALLY_HEAD KURAKA | TRY_HEAD KURAKA CATCH_HEAD KURAKA FINALLY_HEAD BODY_IN_FUNC KURAKA | TRY_HEAD KURAKA CATCH_HEAD BODY_IN_FUNC KURAKA FINALLY_HEAD KURAKA | TRY_HEAD BODY_IN_FUNC KURAKA CATCH_HEAD KURAKA FINALLY_HEAD KURAKA | TRY_HEAD KURAKA CATCH_HEAD KURAKA FINALLY_HEAD KURAKA | TRY_HEAD BODY_IN_FUNC KURAKA CATCH_HEAD BODY_IN_FUNC KURAKA | TRY_HEAD BODY_IN_FUNC KURAKA CATCH_HEAD KURAKA | TRY_HEAD KURAKA CATCH_HEAD BODY_IN_FUNC KURAKA | TRY_HEAD KURAKA CATCH_HEAD KURAKA | TRY_HEAD BODY_IN_FUNC KURAKA FINALLY_HEAD BODY_IN_FUNC KURAKA | TRY_HEAD BODY_IN_FUNC KURAKA FINALLY_HEAD KURAKA | TRY_HEAD KURAKA FINALLY_HEAD BODY_IN_FUNC KURAKA | TRY_HEAD KURAKA FINALLY_HEAD KURAKA

TCF_IN_LOOP_IN_FUNC -> TRY_HEAD BODY_IN_LOOP_IN_FUNC KURAKA CATCH_HEAD BODY_IN_LOOP_IN_FUNC KURAKA FINALLY_HEAD BODY_IN_LOOP_IN_FUNC KURAKA | TRY_HEAD KURAKA CATCH_HEAD BODY_IN_LOOP_IN_FUNC KURAKA FINALLY_HEAD BODY_IN_LOOP_IN_FUNC KURAKA | TRY_HEAD BODY_IN_LOOP_IN_FUNC KURAKA CATCH_HEAD KURAKA FINALLY_HEAD BODY_IN_LOOP_IN_FUNC KURAKA | TRY_HEAD BODY_IN_LOOP_IN_FUNC KURAKA CATCH_HEAD BODY_IN_LOOP_IN_FUNC KURAKA FINALLY_HEAD KURAKA | TRY_HEAD KURAKA CATCH_HEAD KURAKA FINALLY_HEAD BODY_IN_LOOP_IN_FUNC KURAKA | TRY_HEAD KURAKA CATCH_HEAD BODY_IN_LOOP_IN_FUNC KURAKA FINALLY_HEAD KURAKA | TRY_HEAD BODY_IN_LOOP_IN_FUNC KURAKA CATCH_HEAD KURAKA FINALLY_HEAD KURAKA | TRY_HEAD KURAKA CATCH_HEAD KURAKA FINALLY_HEAD KURAKA | TRY_HEAD BODY_IN_LOOP_IN_FUNC KURAKA CATCH_HEAD BODY_IN_LOOP_IN_FUNC KURAKA | TRY_HEAD BODY_IN_LOOP_IN_FUNC KURAKA CATCH_HEAD KURAKA | TRY_HEAD KURAKA CATCH_HEAD BODY_IN_LOOP_IN_FUNC KURAKA | TRY_HEAD KURAKA CATCH_HEAD KURAKA | TRY_HEAD BODY_IN_LOOP_IN_FUNC KURAKA FINALLY_HEAD BODY_IN_LOOP_IN_FUNC KURAKA | TRY_HEAD BODY_IN_LOOP_IN_FUNC KURAKA FINALLY_HEAD KURAKA | TRY_HEAD KURAKA FINALLY_HEAD BODY_IN_LOOP_IN_FUNC KURAKA | TRY_HEAD KURAKA FINALLY_HEAD KURAKA

// WHILE
WHILES -> while
WHILE_HEAD -> WHILES KURBKI EXP KURBKA

WHILE_OUT -> WHILE_HEAD KURAKI BODY_IN_LOOP KURAKA

WHILE_IN_FUNC -> WHILE_HEAD KURAKI BODY_IN_LOOP_IN_FUNC KURAKA